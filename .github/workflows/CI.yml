# References:
# ) https://github.com/JuliaDSP/DSP.jl/blob/master/.github/workflows/CI.yml
# ) https://github.com/invenia/PkgTemplates.jl/blob/master/test/fixtures/AllPlugins/.github/workflows/CI.yml
name: CI
on:
  push:
    branches:
      - main
    tags: "*"
  pull_request:
    branches:
      - main
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - "1.6" # It is strongly recommended to wrap versions in quotes.
          # - "nightly" # add more as needed
        os:
          - ubuntu-latest
        arch:
          - x64
        exclude:
          - os: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1.6 # change version as needed
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1 # change version as needed
      - uses: julia-actions/julia-runtest@v1 # change version as needed
      - uses: julia-actions/julia-processcoverage@v1 # change version as needed
      - uses: julia-actions/julia-uploadcoveralls@v1 # change version as needed
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN}}
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1.6
        with:
          version: "1.6" # It is strongly recommended to wrap versions in quotes.
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
      - run: |
          julia --project=docs -e '
            using Documenter: DocMeta, doctest
            using ChrisPkg
            DocMeta.setdocmeta!(ChrisPkg, :DocTestSetup, :(using ChrisPkg); recursive=true)
            doctest(ChrisPkg)'
